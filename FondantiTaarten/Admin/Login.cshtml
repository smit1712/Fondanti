@using WebMatrix.WebData;
@{   

    /// <summary>Als er nog geen connectie met de database dan wordt hij hier aaangemaakt</summary>
    if (WebSecurity.Initialized == false)
    {

        WebSecurity.InitializeDatabaseConnection("FondantiDataBase", "Users", "UserId", "Username", true);
    }

    /// <summary>
    /// Wanneer er op de knop wordt gedrukt wordt er in de database gekeken of de gegevens kloppen.
    /// Als de gegevens kloppen wordt de gebruiker doorgestuurd naar de adminpagina.
    /// Als er 4 keer het verkeerde wachtwoord wordt ingevuld komt het account op slot.
    /// </summary>
    else if (IsPost)
    {
        AntiForgery.Validate();
        string Username = Request["Username"];
        var Password = Request["Password"];

        Validation.RequireFields("Username", "Password");
        Validation.Add("Username", Validator.Regex(@"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*", "Your username should be an email address"));

        var returnurl = Request["returnurl"];
        if (returnurl.IsEmpty())
        {
            returnurl = Href("~/Admin/AdminPage.cshtml");
        }


        if (Validation.IsValid())
        {


            if (WebSecurity.UserExists(Username) && WebSecurity.GetPasswordFailuresSinceLastSuccess(Username) >= 4 && WebSecurity.GetLastPasswordFailureDate(Username).AddMinutes(2) > DateTime.UtcNow)
            {
                Response.Redirect("~/Admin/AccountLockedOut");
            }

            if (WebSecurity.IsConfirmed(Username))
            {

                if (WebSecurity.Login(Username, Password))
                {
                    Context.RedirectLocal(returnurl);
                }
                else
                {
                    Validation.AddFormError("Incorrect username or password");
                }
            }
            else
            {
                Validation.AddFormError("User does not exist or account is not confirmed");
            }

        }

    }
    }

<!DOCTYPE html>
<html>
<head>
    <!-- Render Shared Header-->
    @RenderPage("~/_Shared/_Header.cshtml")
    <link rel="stylesheet" href="~/Admin/Login.css" />
</head>
<body>
    <!-- Render Shared Navbar-->
    @RenderPage("~/_Shared/_Navbar.cshtml")
    <!--
    Hier wirdt de loginform gemaakt.    
    -->
    <div class="login-page">
        <div class="form">
            <form method="post" class="login-form">
                @AntiForgery.GetHtml()
                <fieldset>
                    <legend>Login</legend>
                    @Html.ValidationSummary(true)

                    <div>
                        <label>Username</label>
                        <input type="text" name="Username" />
                        <!--checked de gebruikersnaam-->
                        @Html.ValidationMessage("Username")
                    </div>

                    <div>
                        <label>Password</label>
                        <input type="password" name="Password" />
                        <!--checked het wachtwoord-->
                        @Html.ValidationMessage("Password")
                    </div>
                    <!--Login button-->
                    <button>Login</button>
                </fieldset>
            </form>

        </div>
    </div>
</body>
</html>
